<break와 continue>
반복문에서는 break와 continue 키워드를 사용한다.
for()
while()

-break: 현재 반복문을 종료한다. 반복문 종료 필요시 사용.

예시) int a=30;
	if(a%2==0){
		break;
False: break는 반복문에서 사용 가능한데 위의 코드는 조건문이다.

-continue: 더이상 코드를 실행하지 않는다. 
 증감식->조건판별

예시)
for(int i=0; i<10; i++){
	if(i%2==0){
	continue;
	}sysout.(i);
답: 1, 3, 5, 7, 9
false만 출력하는 코드가 됨

예시) 1부터 10까지의 숫자 중 짝수의 합, continue; 한번 사용
int sum=0;
for(int i=1; i<=10; i++){
	if(i%2==1){
	continue;
} sum+=i;
: 2로 나눠지는 값이 1일때 출력하는 것인데 T일때 더이상 코드를 실행하지 않기 때문에 F인 짝수만 실행된다. (참과 거짓)	

<원시변수와 참조변수>
ex) String id="abcdefee";
변수 / 자료형 / 값

자료형의 종류
-원시타입: int, char, boolean, float
-참조타입: String, Random(랜덤수 제공), Scanner
String은 참조변수(대문자)
id 참조자료형(문자열)-index가 있고 0부터 시작
.length(): 길이
.charAt(i): 매개 변수의 위치의 문자가 리턴 ex) i=1 문자를 b를 리턴

String id="abcdefee";
for(int i=0; i<id.length; i++){
if(id.charAt(i)=='e'){
break;
}

<객체>
class로 객체를 만든다
class: 설계도 / 객체: 건물
예시) String id=new String("abc");
String: class(설계도) / new: 만든다 / String("abc"): 객체
문자열 부품: String / 부품을 만든다: new String("");
부품 - 변수(저장) - 매서드(기능: .length()) 

예시)Random r=new Random();
r.nextInt(45);
햬석: 객체는 Random 객체이며 클래스로 객체를 만들고 Random 객제 중에 nextInt()라는 기능이 필요
--> 0~45까지 나오는 랜덤 